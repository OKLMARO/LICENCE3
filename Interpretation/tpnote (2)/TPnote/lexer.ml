# 1 "lexer.mll"
 
open Parser
exception Eof

# 7 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\245\255\246\255\000\000\000\000\249\255\000\000\251\255\
    \252\255\253\255\001\000\255\255\001\000\254\255\250\255\002\000\
    \000\000\000\000\000\000\001\000\248\255\247\255\002\000\254\255\
    \255\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\010\000\010\000\255\255\010\000\255\255\
    \255\255\255\255\010\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\000\000\255\255\000\000\
    \000\000\000\000\012\000\000\000\255\255\000\000\000\000\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\023\000\000\000\
    \000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\011\000\011\000\000\000\000\000\011\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \011\000\000\000\009\000\000\000\024\000\000\000\000\000\010\000\
    \013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\005\000\000\000\006\000\014\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\017\000\000\000\018\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\021\000\003\000\
    \004\000\016\000\015\000\019\000\020\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\008\000\000\000\007\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\255\255\255\255";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\255\255\022\000\255\255\255\255\000\000\
    \012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\006\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\016\000\255\255\017\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\003\000\000\000\
    \000\000\015\000\004\000\018\000\019\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\010\000\022\000";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec anlex lexbuf =
   __ocaml_lex_anlex_rec lexbuf 0
and __ocaml_lex_anlex_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 10 "lexer.mll"
                                      ( anlex lexbuf (* Oubli des espacements et passages à la ligne *) )
# 113 "lexer.ml"

  | 1 ->
let
# 11 "lexer.mll"
                 lxm
# 119 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_start_pos + 3) in
# 11 "lexer.mll"
                                      ( CHAR (lxm.[1]) )
# 123 "lexer.ml"

  | 2 ->
# 12 "lexer.mll"
                                      ( str "" lexbuf )
# 128 "lexer.ml"

  | 3 ->
# 13 "lexer.mll"
                                      ( AO )
# 133 "lexer.ml"

  | 4 ->
# 14 "lexer.mll"
                                      ( AF )
# 138 "lexer.ml"

  | 5 ->
# 15 "lexer.mll"
                                      ( ARR )
# 143 "lexer.ml"

  | 6 ->
# 16 "lexer.mll"
                                      ( SEMICOL )
# 148 "lexer.ml"

  | 7 ->
# 17 "lexer.mll"
                                      ( PROCESS )
# 153 "lexer.ml"

  | 8 ->
# 18 "lexer.mll"
                                      ( ON )
# 158 "lexer.ml"

  | 9 ->
# 19 "lexer.mll"
                                      ( raise Eof )
# 163 "lexer.ml"

  | 10 ->
let
# 20 "lexer.mll"
          lxm
# 169 "lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 20 "lexer.mll"
                                      ( (* Pour tout autre caractère : message sur la sortie erreur + oubli *)
                                        Printf.eprintf "Unknown character '%c': ignored\n" lxm; flush stderr;
                                        anlex lexbuf
                                      )
# 176 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_anlex_rec lexbuf __ocaml_lex_state

and str s lexbuf =
   __ocaml_lex_str_rec s lexbuf 22
and __ocaml_lex_str_rec s lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 26 "lexer.mll"
                                      ( STR s )
# 188 "lexer.ml"

  | 1 ->
let
# 27 "lexer.mll"
         c
# 194 "lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 27 "lexer.mll"
                                      ( str (Printf.sprintf "%s%c" s c) lexbuf )
# 198 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_str_rec s lexbuf __ocaml_lex_state

;;

